// ==UserScript==
// @name Test HTML/CSS highlights
// ==/UserScript==

document.body.insertAdjacentHTML('beforeend', `<div class="foo">
  <p>hello <i>world</i></p>
</div>`);
someElt.insertAdjacentHTML('afterbegin', `<hr class="bar">`);

GM_addStyle(`
#some-id div {
  color: #FF0000;
  border-bottom: 1px solid gray;
  z-index: 123;
}`);
GM_addStyle(` a { color: pink; }`);

someElt.innerHTML = `<span id="bar">
  123 <!-- html comments -->
</span>`;

// highlight arbitrary string template
const someHTML = /* html */ `<br>
  <hr class="acme">`;

let someCSS = /* CSS  */ `.a:visited {
  color: purple;
}`;

// plain string support

var uiHtml = '<h1>heading</h1>' +
    '<span id="someId" class="foo">time is: ' + now + '</span>' +
    '  <br>' + // leading spaces okay
    '<br>' +
    '<br/>' +
    "<br />" + // double-quoted string
    "</div  >" + // doesn't complain if there is no opening <div>
    '<img alt="Quotes \'in text\'" src="bar.jpg">'; // handle some escaping quotes well

var dbgMsg = '<-- output'; // doesn't get mistaken as html

// some limitations
//
someElt.innerHTML = "<br class=\" foo\">" +  // does not hanlde some escaping well
             '<div class="' + classToUse + '"></div>' + // doesn't detect if a string begins with a partial tag
             'plain text <hr>'; // doesn't detect if some plain text at the beginning.

console.debug('<dbg> this is some debug statement'); // mistaken as html as the string  starts with a tag

var end = true;
